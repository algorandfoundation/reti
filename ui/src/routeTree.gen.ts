/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ValidatorsImport } from './routes/validators'
import { Route as InstitutionalSupportImport } from './routes/institutional-support'
import { Route as AddImport } from './routes/add'
import { Route as IndexImport } from './routes/index'
import { Route as ValidatorsValidatorIdImport } from './routes/validators_.$validatorId'

// Create/Update Routes

const ValidatorsRoute = ValidatorsImport.update({
  id: '/validators',
  path: '/validators',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionalSupportRoute = InstitutionalSupportImport.update({
  id: '/institutional-support',
  path: '/institutional-support',
  getParentRoute: () => rootRoute,
} as any)

const AddRoute = AddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ValidatorsValidatorIdRoute = ValidatorsValidatorIdImport.update({
  id: '/validators_/$validatorId',
  path: '/validators/$validatorId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddImport
      parentRoute: typeof rootRoute
    }
    '/institutional-support': {
      id: '/institutional-support'
      path: '/institutional-support'
      fullPath: '/institutional-support'
      preLoaderRoute: typeof InstitutionalSupportImport
      parentRoute: typeof rootRoute
    }
    '/validators': {
      id: '/validators'
      path: '/validators'
      fullPath: '/validators'
      preLoaderRoute: typeof ValidatorsImport
      parentRoute: typeof rootRoute
    }
    '/validators_/$validatorId': {
      id: '/validators_/$validatorId'
      path: '/validators/$validatorId'
      fullPath: '/validators/$validatorId'
      preLoaderRoute: typeof ValidatorsValidatorIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/institutional-support': typeof InstitutionalSupportRoute
  '/validators': typeof ValidatorsRoute
  '/validators/$validatorId': typeof ValidatorsValidatorIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/institutional-support': typeof InstitutionalSupportRoute
  '/validators': typeof ValidatorsRoute
  '/validators/$validatorId': typeof ValidatorsValidatorIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/institutional-support': typeof InstitutionalSupportRoute
  '/validators': typeof ValidatorsRoute
  '/validators_/$validatorId': typeof ValidatorsValidatorIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add'
    | '/institutional-support'
    | '/validators'
    | '/validators/$validatorId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add'
    | '/institutional-support'
    | '/validators'
    | '/validators/$validatorId'
  id:
    | '__root__'
    | '/'
    | '/add'
    | '/institutional-support'
    | '/validators'
    | '/validators_/$validatorId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRoute: typeof AddRoute
  InstitutionalSupportRoute: typeof InstitutionalSupportRoute
  ValidatorsRoute: typeof ValidatorsRoute
  ValidatorsValidatorIdRoute: typeof ValidatorsValidatorIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRoute: AddRoute,
  InstitutionalSupportRoute: InstitutionalSupportRoute,
  ValidatorsRoute: ValidatorsRoute,
  ValidatorsValidatorIdRoute: ValidatorsValidatorIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add",
        "/institutional-support",
        "/validators",
        "/validators_/$validatorId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add": {
      "filePath": "add.tsx"
    },
    "/institutional-support": {
      "filePath": "institutional-support.tsx"
    },
    "/validators": {
      "filePath": "validators.tsx"
    },
    "/validators_/$validatorId": {
      "filePath": "validators_.$validatorId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
